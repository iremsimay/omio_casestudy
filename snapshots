# Snapshots (Slowly Changing Data)

We use dbt snapshots to track changes in booking records over time.
We use the `updatedAt` timestamp as a change indicator.
Any update with a newer `updatedAt` creates a new version in the snapshot table.

Example snapshot configuration:
```sql
{% snapshot booking_snapshot %}
{{
  config(
    target_schema='snapshots',
    unique_key='bookingId',
    strategy='timestamp',
    updated_at='updatedAt'
  )
}}
select * from {{ source('raw', 'raw_bookings') }}
{% endsnapshot %}

# When did this bookingâ€™s price change?
By using snapshots, we store each version of the booking with its updatedAt timestamp. This lets us see exactly when the price was updated over time.

# What was the offer partner when the user first booked?
Snapshots preserve the original record when the booking was first created. We can query the earliest snapshot to find the original offer partner.
